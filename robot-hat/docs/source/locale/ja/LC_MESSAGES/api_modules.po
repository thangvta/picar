# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, SunFounder
# This file is distributed under the same license as the SunFounder Robot
# HAT package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Robot HAT \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-07-12 18:01+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../api_modules.rst:3
msgid ""
"Hello, welcome to the SunFounder Raspberry Pi & Arduino & ESP32 "
"Enthusiasts Community on Facebook! Dive deeper into Raspberry Pi, "
"Arduino, and ESP32 with fellow enthusiasts."
msgstr ""
"こんにちは、SunFounderのRaspberry Pi & Arduino & "
"ESP32愛好家コミュニティへようこそ！Facebook上でRaspberry "
"Pi、Arduino、ESP32についてもっと深く掘り下げ、他の愛好家と交流しましょう。"

#: ../api_modules.rst:5
msgid "**Why Join?**"
msgstr " **参加する理由は？**"

#: ../api_modules.rst:7
msgid ""
"**Expert Support**: Solve post-sale issues and technical challenges with "
"help from our community and team."
msgstr "**エキスパートサポート**：コミュニティやチームの助けを借りて、販売後の問題や技術的な課題を解決します。"

#: ../api_modules.rst:8
msgid "**Learn & Share**: Exchange tips and tutorials to enhance your skills."
msgstr "**学び＆共有**：ヒントやチュートリアルを交換してスキルを向上させましょう。"

#: ../api_modules.rst:9
msgid ""
"**Exclusive Previews**: Get early access to new product announcements and"
" sneak peeks."
msgstr "**独占的なプレビュー**：新製品の発表や先行プレビューに早期アクセスしましょう。"

#: ../api_modules.rst:10
msgid "**Special Discounts**: Enjoy exclusive discounts on our newest products."
msgstr "**特別割引**：最新製品の独占割引をお楽しみください。"

#: ../api_modules.rst:11
msgid ""
"**Festive Promotions and Giveaways**: Take part in giveaways and holiday "
"promotions."
msgstr "**祭りのプロモーションとギフト**：ギフトや祝日のプロモーションに参加しましょう。"

#: ../api_modules.rst:13
msgid ""
"👉 Ready to explore and create with us? Click [|link_sf_facebook|] and "
"join today!"
msgstr "👉 私たちと一緒に探索し、創造する準備はできていますか？[|link_sf_facebook|]をクリックして今すぐ参加しましょう！"

#: ../api_modules.rst:16
msgid "module ``modules``"
msgstr "モジュール ``modules``"

#: ../api_modules.rst:21
msgid "class ``Ultrasonic``"
msgstr "クラス ``Ultrasonic``"

#: ../api_modules.rst:23 ../api_modules.rst:46 ../api_modules.rst:80
#: ../api_modules.rst:110 ../api_modules.rst:220
msgid "**Example**"
msgstr "**例**"

#: ../api_modules.rst:37 ../api_modules.rst:70 ../api_modules.rst:101
#: ../api_modules.rst:210 ../api_modules.rst:246
msgid "**API**"
msgstr "**API**"

#: ../api_modules.rst:44
msgid "class ``ADXL345``"
msgstr "クラス ``ADXL345``"

#: of robot_hat.modules.ADXL345:1
msgid "Bases: :py:class:`~robot_hat.i2c.I2C`"
msgstr "基底: :py:class:`~robot_hat.i2c.I2C`"

#: of robot_hat.modules.ADXL345:1
msgid "ADXL345 modules"
msgstr "ADXL345モジュール"

#: ../docstring of robot_hat.ADXL345.X:1
msgid "X"
msgstr "X"

#: ../docstring of robot_hat.ADXL345.Y:1
msgid "Y"
msgstr "Y"

#: ../docstring of robot_hat.ADXL345.Z:1
msgid "Z"
msgstr "Z"

#: of robot_hat.modules.ADXL345.__init__:1
msgid "Initialize ADXL345"
msgstr "ADXL345を初期化する"

#: of robot_hat.modules.ADXL345.__init__ robot_hat.modules.ADXL345.read
#: robot_hat.modules.Buzzer.__init__ robot_hat.modules.Buzzer.freq
#: robot_hat.modules.Buzzer.play robot_hat.modules.Grayscale_Module.__init__
#: robot_hat.modules.Grayscale_Module.read
#: robot_hat.modules.Grayscale_Module.read_status
#: robot_hat.modules.Grayscale_Module.reference
#: robot_hat.modules.RGB_LED.__init__ robot_hat.modules.RGB_LED.color
msgid "Parameters"
msgstr "パラメータ"

#: of robot_hat.modules.ADXL345.__init__:3
msgid "address of the ADXL345"
msgstr "ADXL345のアドレス"

#: of robot_hat.modules.ADXL345.read:1
msgid "Read an axis from ADXL345"
msgstr "ADXL345から軸を読み取る"

#: of robot_hat.modules.ADXL345.read:3
msgid ""
"read value(g) of an axis, ADXL345.X, ADXL345.Y or ADXL345.Z, None for all"
" axis"
msgstr "軸の値(g)を読み取る、ADXL345.X、ADXL345.YまたはADXL345.Z、すべての軸の場合はNone"

#: of robot_hat.modules.ADXL345.read robot_hat.modules.Grayscale_Module.read
#: robot_hat.modules.Grayscale_Module.read_status
#: robot_hat.modules.Grayscale_Module.reference
msgid "Returns"
msgstr "戻り値"

#: of robot_hat.modules.ADXL345.read:5
msgid "value of the axis, or list of all axis"
msgstr "軸の値、またはすべての軸のリスト"

#: of robot_hat.modules.ADXL345.read robot_hat.modules.Grayscale_Module.read
#: robot_hat.modules.Grayscale_Module.read_status
#: robot_hat.modules.Grayscale_Module.reference
msgid "Return type"
msgstr "戻り値の型"

#: ../api_modules.rst:78
msgid "class ``RGB_LED``"
msgstr "クラス ``RGB_LED``"

#: of robot_hat.modules.RGB_LED:1
msgid "Simple 3 pin RGB LED"
msgstr "シンプルな3ピンRGB LED"

#: ../docstring of robot_hat.RGB_LED.ANODE:1
msgid "Common anode"
msgstr "共通アノード"

#: ../docstring of robot_hat.RGB_LED.CATHODE:1
msgid "Common cathode"
msgstr "共通カソード"

#: of robot_hat.modules.RGB_LED.__init__:1
msgid "Initialize RGB LED"
msgstr "RGB LEDを初期化する"

#: of robot_hat.modules.RGB_LED.__init__:3
msgid "PWM object for red"
msgstr "赤用のPWMオブジェクト"

#: of robot_hat.modules.RGB_LED.__init__:5
msgid "PWM object for green"
msgstr "緑用のPWMオブジェクト"

#: of robot_hat.modules.RGB_LED.__init__:7
msgid "PWM object for blue"
msgstr "青用のPWMオブジェクト"

#: of robot_hat.modules.RGB_LED.__init__:9
msgid "RGB_LED.ANODE or RGB_LED.CATHODE, default is ANODE"
msgstr "RGB_LED.ANODEまたはRGB_LED.CATHODE、デフォルトはANODE"

#: of robot_hat.modules.Buzzer.freq robot_hat.modules.Buzzer.play
#: robot_hat.modules.RGB_LED.__init__
msgid "Raises"
msgstr ""

#: of robot_hat.modules.RGB_LED.__init__:11
msgid "if common is not ANODE or CATHODE"
msgstr "共通がANODEまたはCATHODEでない場合"

#: of robot_hat.modules.RGB_LED.__init__:12
msgid "if r_pin, g_pin or b_pin is not PWM object"
msgstr "r_pin、g_pin、またはb_pinがPWMオブジェクトでない場合"

#: of robot_hat.modules.RGB_LED.color:1
msgid "Write color to RGB LED"
msgstr "RGB LEDに色を書き込む"

#: of robot_hat.modules.RGB_LED.color:3
msgid ""
"color to write, hex string starts with \"#\", 24-bit int or tuple of "
"(red, green, blue)"
msgstr "書き込む色、\"#\"で始まる16進数文字列、24ビット整数、または(red, green, blue)のタプル"

#: ../api_modules.rst:108
msgid "class ``Buzzer``"
msgstr "クラス ``Buzzer``"

#: ../api_modules.rst:112
msgid "Imports and initialize"
msgstr "インポートと初期化"

#: ../api_modules.rst:133
msgid "Active buzzer beeping"
msgstr "アクティブブザーのビープ音"

#: ../api_modules.rst:143
msgid "Passive buzzer Simple usage"
msgstr "パッシブブザーの簡単な使用方法"

#: ../api_modules.rst:155
msgid "Passive buzzer Manual control"
msgstr "パッシブブザーの手動制御"

#: ../api_modules.rst:171
msgid "Play a song! Baby shark!"
msgstr "曲を演奏する！ベイビーシャーク！"

#: of robot_hat.modules.Buzzer.__init__:1
msgid "Initialize buzzer"
msgstr "ブザーを初期化する"

#: of robot_hat.modules.Buzzer.__init__:3
msgid "PWM object for passive buzzer or Pin object for active buzzer"
msgstr "パッシブブザー用のPWMオブジェクトまたはアクティブブザー用のピンオブジェクト"

#: of robot_hat.modules.Buzzer.on:1
msgid "Turn on buzzer"
msgstr "ブザーをオンにする"

#: of robot_hat.modules.Buzzer.off:1
msgid "Turn off buzzer"
msgstr "ブザーをオフにする"

#: of robot_hat.modules.Buzzer.freq:1
msgid "Set frequency of passive buzzer"
msgstr "パッシブブザーの周波数を設定する"

#: of robot_hat.modules.Buzzer.freq:3
msgid "frequency of buzzer, use Music.NOTES to get frequency of note"
msgstr "ブザーの周波数、Music.NOTESを使用して音符の周波数を取得する"

#: of robot_hat.modules.Buzzer.freq:5 robot_hat.modules.Buzzer.play:7
msgid "if set to active buzzer"
msgstr "アクティブブザーに設定した場合"

#: of robot_hat.modules.Buzzer.play:1
msgid "Play freq"
msgstr "周波数を演奏する"

#: of robot_hat.modules.Buzzer.play:3
msgid "freq to play, you can use Music.note() to get frequency of note"
msgstr "演奏する周波数、Music.note()を使用して音符の周波数を取得できる"

#: of robot_hat.modules.Buzzer.play:5
msgid "duration of each note, in seconds, None means play continuously"
msgstr "各音符の持続時間（秒）、Noneは連続して演奏することを意味する"

#: ../api_modules.rst:218
msgid "class ``Grayscale_Module``"
msgstr "クラス ``Grayscale_Module``"

#: of robot_hat.modules.Grayscale_Module:1
msgid "3 channel Grayscale Module"
msgstr "3チャンネルグレースケールモジュール"

#: ../docstring of robot_hat.Grayscale_Module.LEFT:1
msgid "Left Channel"
msgstr "左チャンネル"

#: ../docstring of robot_hat.Grayscale_Module.MIDDLE:1
msgid "Middle Channel"
msgstr "中央チャンネル"

#: ../docstring of robot_hat.Grayscale_Module.RIGHT:1
msgid "Right Channel"
msgstr "右チャンネル"

#: of robot_hat.modules.Grayscale_Module.__init__:1
msgid "Initialize Grayscale Module"
msgstr "グレースケールモジュールを初期化する"

#: of robot_hat.modules.Grayscale_Module.__init__:3
msgid "ADC object or int for channel 0"
msgstr "チャンネル0用のADCオブジェクトまたは整数"

#: of robot_hat.modules.Grayscale_Module.__init__:5
msgid "ADC object or int for channel 1"
msgstr "チャンネル1用のADCオブジェクトまたは整数"

#: of robot_hat.modules.Grayscale_Module.__init__:7
msgid "ADC object or int for channel 2"
msgstr "チャンネル2用のADCオブジェクトまたは整数"

#: of robot_hat.modules.Grayscale_Module.__init__:9
msgid "reference voltage"
msgstr "基準電圧"

#: of robot_hat.modules.Grayscale_Module.reference:1
msgid "Get Set reference value"
msgstr "基準値の取得と設定"

#: of robot_hat.modules.Grayscale_Module.reference:3
msgid "reference value, None to get reference value"
msgstr "基準値、基準値を取得する場合はNone"

#: of robot_hat.modules.Grayscale_Module.reference:5
msgid "reference value"
msgstr "基準値"

#: of robot_hat.modules.Grayscale_Module.read_status:1
msgid "Read line status"
msgstr "ライン状態の読み取り"

#: of robot_hat.modules.Grayscale_Module.read_status:3
msgid "list of grayscale datas, if None, read from sensor"
msgstr "グレースケールデータのリスト、Noneの場合はセンサーから読み取り"

#: of robot_hat.modules.Grayscale_Module.read_status:5
msgid "list of line status, 0 for white, 1 for black"
msgstr "ライン状態のリスト、0は白、1は黒"

#: of robot_hat.modules.Grayscale_Module.read:1
msgid "read a channel or all datas"
msgstr "チャンネルまたはすべてのデータを読み取る"

#: of robot_hat.modules.Grayscale_Module.read:3
msgid ""
"channel to read, leave empty to read all. 0, 1, 2 or "
"Grayscale_Module.LEFT, Grayscale_Module.CENTER, Grayscale_Module.RIGHT"
msgstr "読み取るチャンネル、すべてを読み取るには空のままにする。0、1、2またはGrayscale_Module.LEFT、Grayscale_Module.CENTER、Grayscale_Module.RIGHT"

#: of robot_hat.modules.Grayscale_Module.read:5
msgid "list of grayscale data"
msgstr "グレースケールデータのリスト"

# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, SunFounder
# This file is distributed under the same license as the SunFounder Robot
# HAT package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Robot HAT \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-07-12 18:01+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: de\n"
"Language-Team: de <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../api_pwm.rst:3
msgid ""
"Hello, welcome to the SunFounder Raspberry Pi & Arduino & ESP32 "
"Enthusiasts Community on Facebook! Dive deeper into Raspberry Pi, "
"Arduino, and ESP32 with fellow enthusiasts."
msgstr ""
"    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32"
" Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die "
"Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten."

#: ../api_pwm.rst:5
msgid "**Why Join?**"
msgstr " **Warum beitreten?**"

#: ../api_pwm.rst:7
msgid ""
"**Expert Support**: Solve post-sale issues and technical challenges with "
"help from our community and team."
msgstr ""
"**Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische "
"Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams."

#: ../api_pwm.rst:8
msgid "**Learn & Share**: Exchange tips and tutorials to enhance your skills."
msgstr ""
"**Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre "
"F√§higkeiten zu verbessern."

#: ../api_pwm.rst:9
msgid ""
"**Exclusive Previews**: Get early access to new product announcements and"
" sneak peeks."
msgstr ""
"**Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen "
"Produktank√ºndigungen und exklusiven Einblicken."

#: ../api_pwm.rst:10
msgid "**Special Discounts**: Enjoy exclusive discounts on our newest products."
msgstr ""
"**Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten "
"Produkte."

#: ../api_pwm.rst:11
msgid ""
"**Festive Promotions and Giveaways**: Take part in giveaways and holiday "
"promotions."
msgstr ""
"**Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und "
"Feiertagsaktionen teil."

#: ../api_pwm.rst:13
msgid ""
"üëâ Ready to explore and create with us? Click [|link_sf_facebook|] and "
"join today!"
msgstr ""
"üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf"
" [|link_sf_facebook|] und treten Sie heute bei!"

#: ../api_pwm.rst:18
msgid "class ``PWM``"
msgstr "Klasse ``PWM``"

#: ../api_pwm.rst:20
msgid "**Example**"
msgstr "**Beispiel**"

#: ../api_pwm.rst:58
msgid "**API**"
msgstr "**API**"

#: of robot_hat.pwm.PWM:1
msgid "Bases: :py:class:`~robot_hat.i2c.I2C`"
msgstr "Basisklasse: :py:class:`~robot_hat.i2c.I2C`"

#: of robot_hat.pwm.PWM:1
msgid "Pulse width modulation (PWM)"
msgstr "Pulsweitenmodulation (PWM)"

#: ../docstring of robot_hat.PWM.REG_CHN:1
msgid "Channel register prefix"
msgstr "Kanalregister-Pr√§fix"

#: ../docstring of robot_hat.PWM.REG_PSC:1
msgid "Prescaler register prefix"
msgstr "Vorteiler-Register-Pr√§fix"

#: ../docstring of robot_hat.PWM.REG_ARR:1
msgid "Period registor prefix"
msgstr "Periodenregister-Pr√§fix"

#: ../docstring of robot_hat.PWM.CLOCK:1
msgid "Clock frequency"
msgstr "Taktfrequenz"

#: of robot_hat.pwm.PWM.__init__:1
msgid "Initialize PWM"
msgstr "PWM initialisieren"

#: of robot_hat.pwm.PWM.__init__ robot_hat.pwm.PWM.freq
#: robot_hat.pwm.PWM.period robot_hat.pwm.PWM.prescaler
#: robot_hat.pwm.PWM.pulse_width robot_hat.pwm.PWM.pulse_width_percent
msgid "Parameters"
msgstr "Parameter"

#: of robot_hat.pwm.PWM.__init__:3
msgid "PWM channel number(0-13/P0-P13)"
msgstr "PWM-Kanalnummer (0-13/P0-P13)"

#: of robot_hat.pwm.PWM.freq:1
msgid "Set/get frequency, leave blank to get frequency"
msgstr "Frequenz setzen/abfragen, leer lassen, um die Frequenz zu erhalten"

#: of robot_hat.pwm.PWM.freq:3
msgid "frequency(0-65535)(Hz)"
msgstr "Frequenz (0-65535) (Hz)"

#: of robot_hat.pwm.PWM.freq robot_hat.pwm.PWM.period
#: robot_hat.pwm.PWM.prescaler robot_hat.pwm.PWM.pulse_width
#: robot_hat.pwm.PWM.pulse_width_percent
msgid "Returns"
msgstr "R√ºckgabe"

#: of robot_hat.pwm.PWM.freq:5
msgid "frequency"
msgstr "Frequenz"

#: of robot_hat.pwm.PWM.freq robot_hat.pwm.PWM.period
#: robot_hat.pwm.PWM.prescaler robot_hat.pwm.PWM.pulse_width
#: robot_hat.pwm.PWM.pulse_width_percent
msgid "Return type"
msgstr "R√ºckgabetyp"

#: of robot_hat.pwm.PWM.prescaler:1
msgid "Set/get prescaler, leave blank to get prescaler"
msgstr "Vorteiler setzen/abfragen, leer lassen, um den Vorteiler zu erhalten"

#: of robot_hat.pwm.PWM.prescaler:3
msgid "prescaler(0-65535)"
msgstr "Vorteiler (0-65535)"

#: of robot_hat.pwm.PWM.prescaler:5
msgid "prescaler"
msgstr "Vorteiler"

#: of robot_hat.pwm.PWM.period:1
msgid "Set/get period, leave blank to get period"
msgstr "Periode setzen/abfragen, leer lassen, um die Periode zu erhalten"

#: of robot_hat.pwm.PWM.period:3
msgid "period(0-65535)"
msgstr "Periode (0-65535)"

#: of robot_hat.pwm.PWM.period:5
msgid "period"
msgstr "Periode"

#: of robot_hat.pwm.PWM.pulse_width:1
msgid "Set/get pulse width, leave blank to get pulse width"
msgstr "Pulsbreite setzen/abfragen, leer lassen, um die Pulsbreite zu erhalten"

#: of robot_hat.pwm.PWM.pulse_width:3
msgid "pulse width(0-65535)"
msgstr "Pulsbreite (0-65535)"

#: of robot_hat.pwm.PWM.pulse_width:5
msgid "pulse width"
msgstr "Pulsbreite"

#: of robot_hat.pwm.PWM.pulse_width_percent:1
msgid "Set/get pulse width percentage, leave blank to get pulse width percentage"
msgstr ""
"Pulsbreitenprozentsatz setzen/abfragen, leer lassen, um den "
"Pulsbreitenprozentsatz zu erhalten"

#: of robot_hat.pwm.PWM.pulse_width_percent:3
msgid "pulse width percentage(0-100)"
msgstr "Pulsbreitenprozentsatz (0-100)"

#: of robot_hat.pwm.PWM.pulse_width_percent:5
msgid "pulse width percentage"
msgstr "Pulsbreitenprozentsatz"

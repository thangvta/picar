# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, SunFounder
# This file is distributed under the same license as the SunFounder Robot
# HAT package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Robot HAT \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-07-12 18:01+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: de\n"
"Language-Team: de <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../api_modules.rst:3
msgid ""
"Hello, welcome to the SunFounder Raspberry Pi & Arduino & ESP32 "
"Enthusiasts Community on Facebook! Dive deeper into Raspberry Pi, "
"Arduino, and ESP32 with fellow enthusiasts."
msgstr ""
"    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32"
" Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die "
"Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten."

#: ../api_modules.rst:5
msgid "**Why Join?**"
msgstr " **Warum beitreten?**"

#: ../api_modules.rst:7
msgid ""
"**Expert Support**: Solve post-sale issues and technical challenges with "
"help from our community and team."
msgstr ""
"**Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische "
"Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams."

#: ../api_modules.rst:8
msgid "**Learn & Share**: Exchange tips and tutorials to enhance your skills."
msgstr ""
"**Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre "
"F√§higkeiten zu verbessern."

#: ../api_modules.rst:9
msgid ""
"**Exclusive Previews**: Get early access to new product announcements and"
" sneak peeks."
msgstr ""
"**Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen "
"Produktank√ºndigungen und exklusiven Einblicken."

#: ../api_modules.rst:10
msgid "**Special Discounts**: Enjoy exclusive discounts on our newest products."
msgstr ""
"**Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten "
"Produkte."

#: ../api_modules.rst:11
msgid ""
"**Festive Promotions and Giveaways**: Take part in giveaways and holiday "
"promotions."
msgstr ""
"**Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und "
"Feiertagsaktionen teil."

#: ../api_modules.rst:13
msgid ""
"üëâ Ready to explore and create with us? Click [|link_sf_facebook|] and "
"join today!"
msgstr ""
"üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf"
" [|link_sf_facebook|] und treten Sie heute bei!"

#: ../api_modules.rst:16
msgid "module ``modules``"
msgstr "Modul ``modules``"

#: ../api_modules.rst:21
msgid "class ``Ultrasonic``"
msgstr "Klasse ``Ultrasonic``"

#: ../api_modules.rst:23 ../api_modules.rst:46 ../api_modules.rst:80
#: ../api_modules.rst:110 ../api_modules.rst:220
msgid "**Example**"
msgstr "**Beispiel**"

#: ../api_modules.rst:37 ../api_modules.rst:70 ../api_modules.rst:101
#: ../api_modules.rst:210 ../api_modules.rst:246
msgid "**API**"
msgstr "**API**"

#: ../api_modules.rst:44
msgid "class ``ADXL345``"
msgstr "Klasse ``ADXL345``"

#: of robot_hat.modules.ADXL345:1
msgid "Bases: :py:class:`~robot_hat.i2c.I2C`"
msgstr "Basisklasse: :py:class:`~robot_hat.i2c.I2C`"

#: of robot_hat.modules.ADXL345:1
msgid "ADXL345 modules"
msgstr "ADXL345-Module"

#: ../docstring of robot_hat.ADXL345.X:1
msgid "X"
msgstr "X"

#: ../docstring of robot_hat.ADXL345.Y:1
msgid "Y"
msgstr "Y"

#: ../docstring of robot_hat.ADXL345.Z:1
msgid "Z"
msgstr "Z"

#: of robot_hat.modules.ADXL345.__init__:1
msgid "Initialize ADXL345"
msgstr "ADXL345 initialisieren"

#: of robot_hat.modules.ADXL345.__init__ robot_hat.modules.ADXL345.read
#: robot_hat.modules.Buzzer.__init__ robot_hat.modules.Buzzer.freq
#: robot_hat.modules.Buzzer.play robot_hat.modules.Grayscale_Module.__init__
#: robot_hat.modules.Grayscale_Module.read
#: robot_hat.modules.Grayscale_Module.read_status
#: robot_hat.modules.Grayscale_Module.reference
#: robot_hat.modules.RGB_LED.__init__ robot_hat.modules.RGB_LED.color
msgid "Parameters"
msgstr "Parameter"

#: of robot_hat.modules.ADXL345.__init__:3
msgid "address of the ADXL345"
msgstr "Adresse des ADXL345"

#: of robot_hat.modules.ADXL345.read:1
msgid "Read an axis from ADXL345"
msgstr "Eine Achse des ADXL345 lesen"

#: of robot_hat.modules.ADXL345.read:3
msgid ""
"read value(g) of an axis, ADXL345.X, ADXL345.Y or ADXL345.Z, None for all"
" axis"
msgstr ""
"Wert (g) einer Achse lesen, ADXL345.X, ADXL345.Y oder ADXL345.Z, None f√ºr"
" alle Achsen"

#: of robot_hat.modules.ADXL345.read robot_hat.modules.Grayscale_Module.read
#: robot_hat.modules.Grayscale_Module.read_status
#: robot_hat.modules.Grayscale_Module.reference
msgid "Returns"
msgstr "R√ºckgabe"

#: of robot_hat.modules.ADXL345.read:5
msgid "value of the axis, or list of all axis"
msgstr "Wert der Achse oder Liste aller Achsen"

#: of robot_hat.modules.ADXL345.read robot_hat.modules.Grayscale_Module.read
#: robot_hat.modules.Grayscale_Module.read_status
#: robot_hat.modules.Grayscale_Module.reference
msgid "Return type"
msgstr "R√ºckgabetyp"

#: ../api_modules.rst:78
msgid "class ``RGB_LED``"
msgstr "Klasse ``RGB_LED``"

#: of robot_hat.modules.RGB_LED:1
msgid "Simple 3 pin RGB LED"
msgstr "Einfache 3-Pin-RGB-LED"

#: ../docstring of robot_hat.RGB_LED.ANODE:1
msgid "Common anode"
msgstr "Gemeinsame Anode"

#: ../docstring of robot_hat.RGB_LED.CATHODE:1
msgid "Common cathode"
msgstr "Gemeinsame Kathode"

#: of robot_hat.modules.RGB_LED.__init__:1
msgid "Initialize RGB LED"
msgstr "RGB-LED initialisieren"

#: of robot_hat.modules.RGB_LED.__init__:3
msgid "PWM object for red"
msgstr "PWM-Objekt f√ºr Rot"

#: of robot_hat.modules.RGB_LED.__init__:5
msgid "PWM object for green"
msgstr "PWM-Objekt f√ºr Gr√ºn"

#: of robot_hat.modules.RGB_LED.__init__:7
msgid "PWM object for blue"
msgstr "PWM-Objekt f√ºr Blau"

#: of robot_hat.modules.RGB_LED.__init__:9
msgid "RGB_LED.ANODE or RGB_LED.CATHODE, default is ANODE"
msgstr "RGB_LED.ANODE oder RGB_LED.CATHODE, Standard ist ANODE"

#: of robot_hat.modules.Buzzer.freq robot_hat.modules.Buzzer.play
#: robot_hat.modules.RGB_LED.__init__
msgid "Raises"
msgstr "Wirft"

#: of robot_hat.modules.RGB_LED.__init__:11
msgid "if common is not ANODE or CATHODE"
msgstr "wenn gemeinsam weder ANODE noch CATHODE ist"

#: of robot_hat.modules.RGB_LED.__init__:12
msgid "if r_pin, g_pin or b_pin is not PWM object"
msgstr "wenn r_pin, g_pin oder b_pin kein PWM-Objekt ist"

#: of robot_hat.modules.RGB_LED.color:1
msgid "Write color to RGB LED"
msgstr "Farbe an RGB-LED schreiben"

#: of robot_hat.modules.RGB_LED.color:3
msgid ""
"color to write, hex string starts with \"#\", 24-bit int or tuple of "
"(red, green, blue)"
msgstr ""
"Zu schreibende Farbe, Hex-String beginnend mit \"#\", 24-Bit-Integer oder"
" Tupel aus (Rot, Gr√ºn, Blau)"

#: ../api_modules.rst:108
msgid "class ``Buzzer``"
msgstr "Klasse ``Buzzer``"

#: ../api_modules.rst:112
msgid "Imports and initialize"
msgstr "Importieren und Initialisieren"

#: ../api_modules.rst:133
msgid "Active buzzer beeping"
msgstr "Aktives Summer-Signal"

#: ../api_modules.rst:143
msgid "Passive buzzer Simple usage"
msgstr "Passiver Summer Einfache Nutzung"

#: ../api_modules.rst:155
msgid "Passive buzzer Manual control"
msgstr "Passiver Summer Manuelle Steuerung"

#: ../api_modules.rst:171
msgid "Play a song! Baby shark!"
msgstr "Ein Lied spielen! Babyhai!"

#: of robot_hat.modules.Buzzer.__init__:1
msgid "Initialize buzzer"
msgstr "Summer initialisieren"

#: of robot_hat.modules.Buzzer.__init__:3
msgid "PWM object for passive buzzer or Pin object for active buzzer"
msgstr "PWM-Objekt f√ºr passiven Summer oder Pin-Objekt f√ºr aktiven Summer"

#: of robot_hat.modules.Buzzer.on:1
msgid "Turn on buzzer"
msgstr "Summer einschalten"

#: of robot_hat.modules.Buzzer.off:1
msgid "Turn off buzzer"
msgstr "Summer ausschalten"

#: of robot_hat.modules.Buzzer.freq:1
msgid "Set frequency of passive buzzer"
msgstr "Frequenz des passiven Summers einstellen"

#: of robot_hat.modules.Buzzer.freq:3
msgid "frequency of buzzer, use Music.NOTES to get frequency of note"
msgstr ""
"Frequenz des Summers, verwenden Sie Music.NOTES, um die Frequenz der Note"
" zu erhalten"

#: of robot_hat.modules.Buzzer.freq:5 robot_hat.modules.Buzzer.play:7
msgid "if set to active buzzer"
msgstr "wenn auf aktiven Summer eingestellt"

#: of robot_hat.modules.Buzzer.play:1
msgid "Play freq"
msgstr "Frequenz abspielen"

#: of robot_hat.modules.Buzzer.play:3
msgid "freq to play, you can use Music.note() to get frequency of note"
msgstr ""
"abzuspielende Frequenz, Sie k√∂nnen Music.note() verwenden, um die "
"Frequenz der Note zu erhalten"

#: of robot_hat.modules.Buzzer.play:5
msgid "duration of each note, in seconds, None means play continuously"
msgstr "Dauer jeder Note in Sekunden, None bedeutet kontinuierliches Abspielen"

#: ../api_modules.rst:218
msgid "class ``Grayscale_Module``"
msgstr "Klasse ``Grayscale_Module``"

#: of robot_hat.modules.Grayscale_Module:1
msgid "3 channel Grayscale Module"
msgstr "3-Kanal-Graustufen-Modul"

#: ../docstring of robot_hat.Grayscale_Module.LEFT:1
msgid "Left Channel"
msgstr "Linker Kanal"

#: ../docstring of robot_hat.Grayscale_Module.MIDDLE:1
msgid "Middle Channel"
msgstr "Mittlerer Kanal"

#: ../docstring of robot_hat.Grayscale_Module.RIGHT:1
msgid "Right Channel"
msgstr "Rechter Kanal"

#: of robot_hat.modules.Grayscale_Module.__init__:1
msgid "Initialize Grayscale Module"
msgstr "Graustufen-Modul initialisieren"

#: of robot_hat.modules.Grayscale_Module.__init__:3
msgid "ADC object or int for channel 0"
msgstr "ADC-Objekt oder Integer f√ºr Kanal 0"

#: of robot_hat.modules.Grayscale_Module.__init__:5
msgid "ADC object or int for channel 1"
msgstr "ADC-Objekt oder Integer f√ºr Kanal 1"

#: of robot_hat.modules.Grayscale_Module.__init__:7
msgid "ADC object or int for channel 2"
msgstr "ADC-Objekt oder Integer f√ºr Kanal 2"

#: of robot_hat.modules.Grayscale_Module.__init__:9
msgid "reference voltage"
msgstr "Referenzspannung"

#: of robot_hat.modules.Grayscale_Module.reference:1
msgid "Get Set reference value"
msgstr "Referenzwert abrufen oder einstellen"

#: of robot_hat.modules.Grayscale_Module.reference:3
msgid "reference value, None to get reference value"
msgstr "Referenzwert, None um den Referenzwert abzurufen"

#: of robot_hat.modules.Grayscale_Module.reference:5
msgid "reference value"
msgstr "Referenzwert"

#: of robot_hat.modules.Grayscale_Module.read_status:1
msgid "Read line status"
msgstr "Zeilenstatus lesen"

#: of robot_hat.modules.Grayscale_Module.read_status:3
msgid "list of grayscale datas, if None, read from sensor"
msgstr "Liste der Graustufendaten, falls None, vom Sensor lesen"

#: of robot_hat.modules.Grayscale_Module.read_status:5
msgid "list of line status, 0 for white, 1 for black"
msgstr "Liste des Zeilenstatus, 0 f√ºr Wei√ü, 1 f√ºr Schwarz"

#: of robot_hat.modules.Grayscale_Module.read:1
msgid "read a channel or all datas"
msgstr "einen Kanal oder alle Daten lesen"

#: of robot_hat.modules.Grayscale_Module.read:3
msgid ""
"channel to read, leave empty to read all. 0, 1, 2 or "
"Grayscale_Module.LEFT, Grayscale_Module.CENTER, Grayscale_Module.RIGHT"
msgstr ""
"zu lesender Kanal, leer lassen, um alle zu lesen. 0, 1, 2 oder "
"Grayscale_Module.LEFT, Grayscale_Module.MIDDLE, Grayscale_Module.RIGHT"

#: of robot_hat.modules.Grayscale_Module.read:5
msgid "list of grayscale data"
msgstr "Liste der Graustufendaten"




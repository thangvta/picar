# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, SunFounder
# This file is distributed under the same license as the SunFounder Robot
# HAT package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Robot HAT \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-05-24 09:22+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: de\n"
"Language-Team: de <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.15.0\n"

#: ../onboard_mcu.rst:3
msgid ""
"Hello, welcome to the SunFounder Raspberry Pi & Arduino & ESP32 "
"Enthusiasts Community on Facebook! Dive deeper into Raspberry Pi, "
"Arduino, and ESP32 with fellow enthusiasts."
msgstr "    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten."

#: ../onboard_mcu.rst:5
msgid "**Why Join?**"
msgstr " **Warum beitreten?**"

#: ../onboard_mcu.rst:7
msgid ""
"**Expert Support**: Solve post-sale issues and technical challenges with "
"help from our community and team."
msgstr "**Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams."

#: ../onboard_mcu.rst:8
msgid "**Learn & Share**: Exchange tips and tutorials to enhance your skills."
msgstr "**Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern."

#: ../onboard_mcu.rst:9
msgid ""
"**Exclusive Previews**: Get early access to new product announcements and"
" sneak peeks."
msgstr "**Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken."

#: ../onboard_mcu.rst:10
msgid "**Special Discounts**: Enjoy exclusive discounts on our newest products."
msgstr "**Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte."

#: ../onboard_mcu.rst:11
msgid ""
"**Festive Promotions and Giveaways**: Take part in giveaways and holiday "
"promotions."
msgstr "**Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil."

#: ../onboard_mcu.rst:13
msgid ""
"üëâ Ready to explore and create with us? Click [|link_sf_facebook|] and "
"join today!"
msgstr "üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!"

#: ../onboard_mcu.rst:18
msgid "On-Board MCU"
msgstr "On-Board-MCU"

#: ../onboard_mcu.rst:20
msgid ""
"The Robot HAT comes with an AT32F413CBT7 microcontroller from Artery. It "
"is an ARM Cortex-M4 processor with a maximum clock frequency of 200MHz. "
"The microcontroller has 128KB of Flash memory and 32KB of SRAM."
msgstr ""
"Der Robot HAT ist mit einem AT32F415CBT7 Mikrocontroller von Artery "
"ausgestattet. Es handelt sich um einen ARM Cortex-M4 Prozessor mit einer "
"maximalen Taktfrequenz von 150MHz. Der Mikrocontroller verf√ºgt √ºber 256KB"
" Flash-Speicher und 32KB SRAM."

#: ../onboard_mcu.rst:22
msgid ""
"The onboard PWM and ADC are driven by the microcontroller. Communication "
"between the Raspberry Pi and the microcontroller is established via the "
"I2C interface. The I2C address used for communication is 0x14 (7-bit "
"address format)."
msgstr ""
"Das Onboard-PWM und ADC werden vom Mikrocontroller gesteuert. Die "
"Kommunikation zwischen dem Raspberry Pi und dem Mikrocontroller erfolgt "
"√ºber die I2C-Schnittstelle. Die f√ºr die Kommunikation verwendete I2C-"
"Adresse ist 0x14 (7-Bit-Adressformat)."

#: ../onboard_mcu.rst:28
msgid "Introduce"
msgstr "Einf√ºhrung"

#: ../onboard_mcu.rst:30
msgid ""
"The on board MCU RESET pin is connected to Raspberry Pi GPIO 5, or "
"``MCURST`` for :py:class:`robot_hat.Pin`. The MCU using 7-bit address "
"``0x14``."
msgstr ""
"Der RESET-Pin des Onboard-MCU ist mit dem Raspberry Pi GPIO 5 oder "
"``MCURST`` f√ºr :py:class:`robot_hat.Pin` verbunden. Der MCU verwendet die"
" 7-Bit-Adresse ``0x14``."

#: ../onboard_mcu.rst:33
msgid "ADC"
msgstr "ADC"

#: ../onboard_mcu.rst:35
msgid ""
"Register addresses is 3 byte, 0x170000 to 0x140000 are ADC channels 0 to "
"3. The ADC precision is 12 bit, and the value is 0 to 4095. See more "
"details in :py:class:`robot_hat.ADC`."
msgstr ""
"Registeradressen sind 3 Byte, von 0x170000 bis 0x140000 sind es ADC-"
"Kan√§le 0 bis 3. Die ADC-Pr√§zision betr√§gt 12 Bit, und der Wert liegt "
"zwischen 0 und 4095. Weitere Einzelheiten finden Sie in "
":py:class:`robot_hat.ADC`."

#: ../onboard_mcu.rst:42 ../onboard_mcu.rst:104 ../onboard_mcu.rst:144
#: ../onboard_mcu.rst:164
msgid "Address"
msgstr "Adresse"

#: ../onboard_mcu.rst:42 ../onboard_mcu.rst:104 ../onboard_mcu.rst:144
#: ../onboard_mcu.rst:164
msgid "Description"
msgstr "Beschreibung"

#: ../onboard_mcu.rst:44
msgid "``0x170000``"
msgstr "``0x170000``"

#: ../onboard_mcu.rst:44
msgid "ADC channel 0"
msgstr "ADC-Kanal 0"

#: ../onboard_mcu.rst:46
msgid "``0x160000``"
msgstr "``0x160000``"

#: ../onboard_mcu.rst:46
msgid "ADC channel 1"
msgstr "ADC-Kanal 1"

#: ../onboard_mcu.rst:48
msgid "``0x150000``"
msgstr "``0x150000``"

#: ../onboard_mcu.rst:48
msgid "ADC channel 2"
msgstr "ADC-Kanal 2"

#: ../onboard_mcu.rst:50
msgid "``0x140000``"
msgstr "``0x140000``"

#: ../onboard_mcu.rst:50
msgid "ADC channel 3"
msgstr "ADC-Kanal 3"

#: ../onboard_mcu.rst:52
msgid "``0x130000``"
msgstr "``0x130000``"

#: ../onboard_mcu.rst:52
msgid "ADC channel 4 (Battery Level)"
msgstr "ADC-Kanal 4 (Batteriestand)"

#: ../onboard_mcu.rst:55
msgid "**Example:**"
msgstr "**Beispiel:**"

#: ../onboard_mcu.rst:57
msgid "Read Channel 0 ADC value:"
msgstr "ADC-Wert des Kanals 0 lesen:"

#: ../onboard_mcu.rst:72
msgid "PWM"
msgstr "PWM"

#: ../onboard_mcu.rst:74
msgid "PWM have 1 byte register with 2 byte values."
msgstr "PWM hat ein 1-Byte-Register mit 2-Byte-Werten."

#: ../onboard_mcu.rst:77
msgid "Changing PWM Frequency"
msgstr "√Ñndern der PWM-Frequenz"

#: ../onboard_mcu.rst:79
msgid "Frequency is defined with prescaler and period."
msgstr "Die Frequenz wird mit Vorw√§hler und Periode definiert."

#: ../onboard_mcu.rst:81
msgid ""
"To set frequency first you need to define the period you want. Like on "
"Arduino, normaly is 255, or like PCA9685 is 4095."
msgstr ""
"Um die Frequenz einzustellen, m√ºssen Sie zuerst die gew√ºnschte Periode "
"definieren. Wie bei Arduino ist dies normalerweise 255, oder wie bei "
"PCA9685 4095."

#: ../onboard_mcu.rst:84
msgid ""
"CPU clock is 72MHz, Then you can calculate the prescaler from your desire"
" frequency"
msgstr ""
"Die CPU-Taktfrequenz betr√§gt 72 MHz. Dann k√∂nnen Sie den Vorw√§hler aus "
"Ihrer gew√ºnschten Frequenz berechnen"

#: ../onboard_mcu.rst:87
msgid "prescaler = 72MHz / (Period + 1) / Frequency - 1"
msgstr "Vorw√§hler = 72MHz / (Periode + 1) / Frequenz - 1"

#: ../onboard_mcu.rst:89
msgid ""
"Or if you don't care about the period, there's a way to calculate both "
"period and prescaler from frequency. See :py:func:`robot_hat.PWM.freq`."
msgstr ""
"Wenn Ihnen die Periode egal ist, gibt es eine M√∂glichkeit, sowohl die "
"Periode als auch den Vorw√§hler aus der Frequenz zu berechnen. Siehe "
":py:func:`robot_hat.PWM.freq`."

#: ../onboard_mcu.rst:93
msgid "Pulse width"
msgstr "Pulsbreite"

#: ../onboard_mcu.rst:95
msgid ""
"To control the channel pulse width is rather simple, just write the value"
" to the register."
msgstr ""
"Die Kontrolle der Pulsbreite des Kanals ist recht einfach, schreiben Sie "
"einfach den Wert in das Register."

#: ../onboard_mcu.rst:97
msgid ""
"**But** what is the value? If you want to set the PWM to 50% pulse width,"
" you need to know exactly what the period is. Base on the above "
"calculation, if you set the period to 4095, then set pulse value to 2048 "
"is about 50% pulse width."
msgstr ""
"**Aber** was ist der Wert? Wenn Sie die PWM auf eine 50%-Pulsbreite "
"einstellen m√∂chten, m√ºssen Sie genau wissen, was die Periode ist. "
"Basierend auf der oben genannten Berechnung, wenn Sie die Periode auf "
"4095 einstellen, dann entspricht das Setzen des Puls-Wertes auf 2048 "
"ungef√§hr einer 50%-Pulsbreite."

#: ../onboard_mcu.rst:106
msgid "``0x20``"
msgstr "``0x20``"

#: ../onboard_mcu.rst:106
msgid "Set PWM channel 0 **On Value**"
msgstr "PWM-Kanal 0 **Einschaltwert** einstellen"

#: ../onboard_mcu.rst:108
msgid "``0x21``"
msgstr "``0x21``"

#: ../onboard_mcu.rst:108
msgid "Set PWM channel 1 **On Value**"
msgstr "PWM-Kanal 1 **Einschaltwert** einstellen"

#: ../onboard_mcu.rst:110
msgid "``0x22``"
msgstr "``0x22``"

#: ../onboard_mcu.rst:110
msgid "Set PWM channel 2 **On Value**"
msgstr "PWM-Kanal 2 **Einschaltwert** einstellen"

#: ../onboard_mcu.rst:112
msgid "``0x23``"
msgstr "``0x23``"

#: ../onboard_mcu.rst:112
msgid "Set PWM channel 3 **On Value**"
msgstr "PWM-Kanal 3 **Einschaltwert** einstellen"

#: ../onboard_mcu.rst:114
msgid "``0x24``"
msgstr "``0x24``"

#: ../onboard_mcu.rst:114
msgid "Set PWM channel 4 **On Value**"
msgstr "PWM-Kanal 4 **Einschaltwert** einstellen"

#: ../onboard_mcu.rst:116
msgid "``0x25``"
msgstr "``0x25``"

#: ../onboard_mcu.rst:116
msgid "Set PWM channel 5 **On Value**"
msgstr "PWM-Kanal 5 **Einschaltwert** einstellen"

#: ../onboard_mcu.rst:118
msgid "``0x26``"
msgstr "``0x26``"

#: ../onboard_mcu.rst:118
msgid "Set PWM channel 6 **On Value**"
msgstr "PWM-Kanal 6 **Einschaltwert** einstellen"

#: ../onboard_mcu.rst:120
msgid "``0x27``"
msgstr "``0x27``"

#: ../onboard_mcu.rst:120
msgid "Set PWM channel 7 **On Value**"
msgstr "PWM-Kanal 7 **Einschaltwert** einstellen"

#: ../onboard_mcu.rst:122
msgid "``0x28``"
msgstr "``0x28``"

#: ../onboard_mcu.rst:122
msgid "Set PWM channel 8 **On Value**"
msgstr "PWM-Kanal 8 **Einschaltwert** einstellen"

#: ../onboard_mcu.rst:124
msgid "``0x29``"
msgstr "``0x29``"

#: ../onboard_mcu.rst:124
msgid "Set PWM channel 9 **On Value**"
msgstr "PWM-Kanal 9 **Einschaltwert** einstellen"

#: ../onboard_mcu.rst:126
msgid "``0x2A``"
msgstr "``0x2A``"

#: ../onboard_mcu.rst:126
msgid "Set PWM channel 10 **On Value**"
msgstr "PWM-Kanal 10 **Einschaltwert** einstellen"

#: ../onboard_mcu.rst:128
msgid "``0x2B``"
msgstr "``0x2B``"

#: ../onboard_mcu.rst:128
msgid "Set PWM channel 11 **On Value**"
msgstr "PWM-Kanal 11 **Einschaltwert** einstellen"

#: ../onboard_mcu.rst:130
msgid "``0x2C``"
msgstr "``0x2C``"

#: ../onboard_mcu.rst:130
msgid "Set Motor 2 speed **On Value**"
msgstr "Geschwindigkeit von Motor 2 **Einschaltwert** einstellen"

#: ../onboard_mcu.rst:132
msgid "``0x2D``"
msgstr "``0x2D``"

#: ../onboard_mcu.rst:132
msgid "Set Motor 1 speed **On Value**"
msgstr "Geschwindigkeit von Motor 1 **Einschaltwert** einstellen"

#: ../onboard_mcu.rst:136
msgid "Prescaler"
msgstr "Vorteiler"

#: ../onboard_mcu.rst:138
msgid ""
"Register from 0x40 is to set the PWM prescaler. ranges from 0~65535. "
"There are only 4 timers for all 14 channels. See `PWM Timer(IMPORTANT)`_"
msgstr ""
"Register ab 0x40 dienen zur Einstellung des PWM-Vorteilers. Der Bereich "
"umfasst 0~65535. Es gibt nur 4 Timer f√ºr alle 14 Kan√§le. Siehe `PWM "
"Timer(WICHTIG)`_"

#: ../onboard_mcu.rst:146
msgid "``0x40``"
msgstr "``0x40``"

#: ../onboard_mcu.rst:146
msgid "Set timer 0 **Prescaler**"
msgstr "Timer 0 **Vorteiler** einstellen"

#: ../onboard_mcu.rst:148
msgid "``0x41``"
msgstr "``0x41``"

#: ../onboard_mcu.rst:148
msgid "Set timer 1 **Prescaler**"
msgstr "Timer 1 **Vorteiler** einstellen"

#: ../onboard_mcu.rst:150
msgid "``0x42``"
msgstr "``0x42``"

#: ../onboard_mcu.rst:150
msgid "Set timer 2 **Prescaler**"
msgstr "Timer 2 **Vorteiler** einstellen"

#: ../onboard_mcu.rst:152
msgid "``0x43``"
msgstr "``0x43``"

#: ../onboard_mcu.rst:152
msgid "Set timer 3 **Prescaler**"
msgstr "Timer 3 **Vorteiler** einstellen"

#: ../onboard_mcu.rst:156
msgid "Period"
msgstr "Periode"

#: ../onboard_mcu.rst:158
msgid ""
"Register from 0x44 is to set the PWM period. ranges from 0~65535. There "
"are only 4 timers for all 14 channels. See `PWM Timer(IMPORTANT)`_"
msgstr ""
"Register ab 0x44 dienen zur Einstellung der PWM-Periode. Der Bereich "
"umfasst 0~65535. Es gibt nur 4 Timer f√ºr alle 14 Kan√§le. Siehe `PWM "
"Timer(WICHTIG)`_"

#: ../onboard_mcu.rst:166
msgid "``0x44``"
msgstr "``0x44``"

#: ../onboard_mcu.rst:166
msgid "Set timer 0 **Period**"
msgstr "Timer 0 **Periode** einstellen"

#: ../onboard_mcu.rst:168
msgid "``0x45``"
msgstr "``0x45``"

#: ../onboard_mcu.rst:168
msgid "Set timer 1 **Period**"
msgstr "Timer 1 **Periode** einstellen"

#: ../onboard_mcu.rst:170
msgid "``0x46``"
msgstr "``0x46``"

#: ../onboard_mcu.rst:170
msgid "Set timer 2 **Period**"
msgstr "Timer 2 **Periode** einstellen"

#: ../onboard_mcu.rst:172
msgid "``0x47``"
msgstr "``0x47``"

#: ../onboard_mcu.rst:172
msgid "Set timer 3 **Period**"
msgstr "Timer 3 **Periode** einstellen"

#: ../onboard_mcu.rst:176
msgid "PWM Timer(IMPORTANT)"
msgstr "PWM-Timer(WICHTIG)"

#: ../onboard_mcu.rst:178
msgid ""
"What is PWM Timer? PWM Timer is a tool to turn on and off the PWM channel"
" for you."
msgstr ""
"Was ist ein PWM-Timer? Der PWM-Timer ist ein Werkzeug, um den PWM-Kanal "
"f√ºr Sie ein- und auszuschalten."

#: ../onboard_mcu.rst:180
msgid ""
"The MCU only have 4 timers for PWM: which means you cannot set frequency "
"on different channels at with the same timer."
msgstr ""
"Der MCU hat nur 4 Timer f√ºr PWM: Das bedeutet, Sie k√∂nnen die Frequenz "
"nicht f√ºr verschiedene Kan√§le mit demselben Timer einstellen."

#: ../onboard_mcu.rst:183
msgid ""
"Example: if you set frequency on channel 0, channel 1, 2, 3 will be "
"affected. If you change channel 2 frequency, channel 0, 1, 3 will be "
"override."
msgstr ""
"Beispiel: Wenn Sie die Frequenz auf Kanal 0 einstellen, werden die Kan√§le"
" 1, 2, 3 beeinflusst. Wenn Sie die Frequenz von Kanal 2 √§ndern, werden "
"die Kan√§le 0, 1, 3 √ºberschrieben."

#: ../onboard_mcu.rst:186
msgid ""
"This happens like if you want to control both a passive buzzer (who "
"changes frequency all the time) and servo (who needs a fix frequency of "
"50Hz). Then you should seperate them into two different timer."
msgstr ""
"Dies geschieht beispielsweise, wenn Sie sowohl einen passiven Summer (der"
" st√§ndig die Frequenz √§ndert) als auch einen Servo (der eine feste "
"Frequenz von 50 Hz ben√∂tigt) steuern m√∂chten. Dann sollten Sie diese auf "
"zwei verschiedene Timer aufteilen."

#: ../onboard_mcu.rst:192
msgid "Timer"
msgstr "Timer"

#: ../onboard_mcu.rst:192
msgid "PWM Channel"
msgstr "PWM-Kanal"

#: ../onboard_mcu.rst:194
msgid "Timer 0"
msgstr "Timer 0"

#: ../onboard_mcu.rst:194
msgid "0, 1, 2, 3"
msgstr "0, 1, 2, 3"

#: ../onboard_mcu.rst:196
msgid "Timer 1"
msgstr "Timer 1"

#: ../onboard_mcu.rst:196
msgid "4, 5, 6, 7"
msgstr "4, 5, 6, 7"

#: ../onboard_mcu.rst:198
msgid "Timer 2"
msgstr "Timer 2"

#: ../onboard_mcu.rst:198
msgid "8, 9, 10, 11"
msgstr "8, 9, 10, 11"

#: ../onboard_mcu.rst:200
msgid "Timer 3"
msgstr "Timer 3"

#: ../onboard_mcu.rst:200
msgid "12, 13(for motors)"
msgstr "12, 13 (f√ºr Motoren)"

#: ../onboard_mcu.rst:204
msgid "Example"
msgstr "Beispiel"

#: ../onboard_mcu.rst:224
msgid "Reset MCU"
msgstr "MCU zur√ºcksetzen"

#: ../onboard_mcu.rst:226
msgid ""
"Currently the firmware reads a fix 3 byte value, then it can return ADC "
"values or control PWM. Thats why ADC register need 3byte with the latter "
"2 byte is 0."
msgstr ""
"Derzeit liest die Firmware einen festen 3-Byte-Wert, dann kann sie ADC-"
"Werte zur√ºckgeben oder PWM steuern. Deshalb ben√∂tigt das ADC-Register 3 "
"Byte, wobei die letzten 2 Byte 0 sind."

#: ../onboard_mcu.rst:229
msgid ""
"And if your program is interrupted in the middle of the communication, "
"the firmware may stuck and offset the data. Even we have timeout on "
"waiting on 3 byte datas."
msgstr ""
"Wenn Ihr Programm mitten in der Kommunikation unterbrochen wird, kann die"
" Firmware h√§ngen bleiben und die Daten verschieben. Selbst wenn wir ein "
"Timeout beim Warten auf 3-Byte-Daten haben."

#: ../onboard_mcu.rst:231
msgid ""
"If so, you need to reset the MCU. To reset it. You can use the robot_hat "
"command:"
msgstr ""
"Wenn dies der Fall ist, m√ºssen Sie den MCU zur√ºcksetzen. Um ihn "
"zur√ºckzusetzen, k√∂nnen Sie den Befehl robot_hat verwenden:"

#: ../onboard_mcu.rst:237
msgid "Or you can do it in your python code:"
msgstr "Oder Sie k√∂nnen es in Ihrem Python-Code tun:"

#: ../onboard_mcu.rst:244
msgid ""
"Or you can just pull down the reset pin (GPIO 5) for 10 ms, then pull it "
"back up for another 10ms, as that's what ``reset_mcu`` dose."
msgstr ""
"Oder Sie k√∂nnen einfach den Reset-Pin (GPIO 5) f√ºr 10 ms herunterziehen "
"und dann f√ºr weitere 10 ms wieder hochziehen, denn das ist es, was "
"``reset_mcu`` macht."

